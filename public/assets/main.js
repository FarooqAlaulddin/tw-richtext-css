let o=!1;async function i(){if(o)return;o=!0;const r=document.getElementById("editor").value,t=document.getElementById("editor-status"),e=document.getElementById("css-status"),a=document.getElementById("css-output"),c=document.getElementById("preview");t.textContent="Generating CSS...",t.className="status loading",e.textContent="Processing...",e.className="status loading";try{const s=await(await fetch("/api/generate-css",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({html:r})})).json();if(s.error)throw new Error(s.error);document.getElementById("generated-styles").textContent=s.css,a.textContent=s.css||"/* No CSS generated - no Tailwind classes found */",c.innerHTML=r;const l=new Blob([s.css]).size;document.getElementById("css-size").textContent=l+" bytes";const u=(s.css.match(/\.[\w-]+/g)||[]).length;document.getElementById("class-count").textContent=u+" classes",t.textContent="Ready",t.className="status success",e.textContent="Generated successfully",e.className="status success"}catch(n){console.error("Failed to generate CSS:",n),t.textContent="Error: "+n.message,t.className="status error",e.textContent="Generation failed",e.className="status error",a.textContent="/* Error generating CSS */",c.innerHTML='<p style="color: red;">Error rendering preview</p>'}finally{o=!1}}let d;document.getElementById("editor").addEventListener("input",()=>{clearTimeout(d),document.getElementById("editor-status").textContent="Typing...",d=setTimeout(i,800)});i();
